syntax = "proto3";
package kratos.api;

option go_package = "data_proxy/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
    string prometheus = 4;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
    int32 glog_open =4;
    string jwt_key = 5;
  }
  message LOG {
    string level = 1;
    string local = 2;
  }
  message STAT {
    google.protobuf.Duration tick_time = 1;
    google.protobuf.Duration client_timeout = 2;
  }
  HTTP http = 1;
  GRPC grpc = 2;
  LOG log = 3;
  STAT stat = 4;
}

message common_prometheus{
  int32  rule_id = 1;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
    string push_addr = 3;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
    google.protobuf.Duration dial_timeout = 5;
    string password =6;
    string table_name = 7;
  }
  Database database = 1;
  repeated Redis redis = 2;
}

message Registry {
  message Consul {
    string address = 1;
    string scheme = 2;
  }
  Consul consul = 1;
}

message Service {
  message Dp { // 用户服务
    string endpoint = 1;
  }
  Dp dp = 1;
}

message DataProxy {
  message Kratos {
    string name = 1;
    string version = 2;
  }
  Kratos kratos = 1;
}
